@using Lab2.ViewModels
@model Lab2.ViewModels.CalendarViewModel
@{
    ViewData["Title"] = "Kalendarz rezerwacji";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2>Kalendarz rezerwacji sal</h2>
                <div class="btn-group" role="group">
                    <a asp-action="Calendar" asp-route-date="@Model.SelectedDate.AddDays(-7)" asp-route-viewMode="@Model.ViewMode"
                       class="btn btn-outline-primary">
                        <i class="bi bi-chevron-left"></i> Poprzedni
                    </a>
                    <a asp-action="Calendar" asp-route-viewMode="@Model.ViewMode" class="btn btn-outline-primary">
                        Dzisiaj
                    </a>
                    <a asp-action="Calendar" asp-route-date="@Model.SelectedDate.AddDays(7)" asp-route-viewMode="@Model.ViewMode"
                       class="btn btn-outline-primary">
                        Następny <i class="bi bi-chevron-right"></i>
                    </a>
                </div>
                <div class="btn-group" role="group">
                    <a asp-action="Calendar" asp-route-date="@Model.SelectedDate" asp-route-viewMode="Day"
                       class="btn btn-outline-secondary @(Model.ViewMode == CalendarViewMode.Day ? "active" : "")">
                        Dzień
                    </a>
                    <a asp-action="Calendar" asp-route-date="@Model.SelectedDate" asp-route-viewMode="Week"
                       class="btn btn-outline-secondary @(Model.ViewMode == CalendarViewMode.Week ? "active" : "")">
                        Tydzień
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">
                @if (Model.ViewMode == CalendarViewMode.Week)
                {
                    <span>Tydzień: @Model.WeekStart.ToString("dd.MM.yyyy") - @Model.WeekEnd.ToString("dd.MM.yyyy")</span>
                }
                else
                {
                    <span>@Model.SelectedDate.ToString("dddd, dd MMMM yyyy")</span>
                }
            </h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-bordered table-hover calendar-table mb-0">
                    <thead class="table-light sticky-top">
                        <tr>
                            <th class="time-column">Godzina</th>
                            @if (Model.ViewMode == CalendarViewMode.Week)
                            {
                                @for (int i = 0; i < 7; i++)
                                {
                                    var day = Model.WeekStart.AddDays(i);
                                    var isToday = day.Date == DateTime.Today;
                                    <th colspan="@Model.Rooms.Count()" class="text-center @(isToday ? "bg-info-subtle" : "")">
                                        <div class="fw-bold">@day.ToString("dddd")</div>
                                        <div class="text-muted small">@day.ToString("dd.MM")</div>
                                    </th>
                                }
                            }
                            else
                            {
                                <th colspan="@Model.Rooms.Count()" class="text-center bg-info-subtle">
                                    <div class="fw-bold">@Model.SelectedDate.ToString("dddd")</div>
                                    <div class="text-muted small">@Model.SelectedDate.ToString("dd MMMM yyyy")</div>
                                </th>
                            }
                        </tr>
                        <tr>
                            <th class="time-column"></th>
                            @if (Model.ViewMode == CalendarViewMode.Week)
                            {
                                @for (int i = 0; i < 7; i++)
                                {
                                    var day = Model.WeekStart.AddDays(i);
                                    @foreach (var room in Model.Rooms)
                                    {
                                        <th class="room-column text-center small">
                                            <div class="fw-semibold">@room.Name</div>
                                            <div class="text-muted">@room.Capacity <i class="bi bi-people-fill"></i></div>
                                        </th>
                                    }
                                }
                            }
                            else
                            {
                                @foreach (var room in Model.Rooms)
                                {
                                    <th class="room-column text-center">
                                        <div class="fw-semibold">@room.Name</div>
                                        <div class="text-muted">Pojemność: @room.Capacity osób</div>
                                    </th>
                                }
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var hour in Model.WorkingHours)
                        {
                            <tr>
                                <td class="time-column fw-bold text-center align-middle">
                                    @hour:00 - @(hour + 1):00
                                </td>
                                @if (Model.ViewMode == CalendarViewMode.Week)
                                {
                                    @for (int dayOffset = 0; dayOffset < 7; dayOffset++)
                                    {
                                        var currentDay = Model.WeekStart.AddDays(dayOffset);
                                        @foreach (var room in Model.Rooms)
                                        {
                                            var slotStart = new DateTime(currentDay.Year, currentDay.Month, currentDay.Day, hour, 0, 0);
                                            var slotEnd = slotStart.AddHours(1);
                                            var booking = Model.Bookings.FirstOrDefault(b =>
                                            b.RoomId == room.Id &&
                                            b.StartTime < slotEnd &&
                                            b.EndTime > slotStart);

                                            @if (booking != null)
                                            {
                                                var isOwner = User.Identity?.Name == booking.UserName;
                                                <td class="booking-slot booked position-relative"
                                                    data-booking-id="@booking.BookingId"
                                                    data-room-name="@room.Name"
                                                    data-user-name="@booking.UserName"
                                                    data-start="@booking.StartTime.ToString("yyyy-MM-dd HH:mm")"
                                                    data-end="@booking.EndTime.ToString("yyyy-MM-dd HH:mm")">
                                                    <div class="booking-info">
                                                        <small class="d-block text-truncate">
                                                            <i class="bi bi-person-circle"></i> @booking.UserName
                                                        </small>
                                                        <small class="text-muted">
                                                            @booking.StartTime.ToString("HH:mm") - @booking.EndTime.ToString("HH:mm")
                                                        </small>
                                                    </div>
                                                    @if (isOwner || User.IsInRole("Admin"))
                                                    {
                                                        <button class="btn btn-sm btn-danger delete-booking-btn position-absolute top-0 end-0 m-1"
                                                                data-booking-id="@booking.BookingId"
                                                                title="Usuń rezerwację">
                                                            <i class="bi bi-x-lg"></i>
                                                        </button>
                                                    }
                                                </td>
                                            }
                                            else
                                            {
                                                var isPast = slotStart < DateTime.Now;
                                                <td class="booking-slot @(isPast ? "past-slot" : "available") text-center"
                                                    data-room-id="@room.Id"
                                                    data-room-name="@room.Name"
                                                    data-start="@slotStart.ToString("yyyy-MM-dd HH:mm")"
                                                    data-end="@slotEnd.ToString("yyyy-MM-dd HH:mm")"
                                                    @(isPast ? "" : "role='button'")>
                                                    @if (!isPast)
                                                    {
                                                        <span class="text-muted small">Wolne</span>
                                                    }
                                                </td>
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    @foreach (var room in Model.Rooms)
                                    {
                                        var slotStart = new DateTime(Model.SelectedDate.Year, Model.SelectedDate.Month, Model.SelectedDate.Day, hour, 0, 0);
                                        var slotEnd = slotStart.AddHours(1);
                                        var booking = Model.Bookings.FirstOrDefault(b =>
                                        b.RoomId == room.Id &&
                                        b.StartTime < slotEnd &&
                                        b.EndTime > slotStart);

                                        @if (booking != null)
                                        {
                                            var isOwner = User.Identity?.Name == booking.UserName;
                                            <td class="booking-slot booked position-relative"
                                                data-booking-id="@booking.BookingId">
                                                <div class="booking-info">
                                                    <strong>@booking.UserName</strong><br />
                                                    <small>@booking.StartTime.ToString("HH:mm") - @booking.EndTime.ToString("HH:mm")</small>
                                                </div>
                                                @if (isOwner || User.IsInRole("Admin"))
                                                {
                                                    <button class="btn btn-sm btn-danger delete-booking-btn"
                                                            data-booking-id="@booking.BookingId">
                                                        Usuń
                                                    </button>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            var isPast = slotStart < DateTime.Now;
                                            <td class="booking-slot @(isPast ? "past-slot" : "available")"
                                                data-room-id="@room.Id"
                                                data-room-name="@room.Name"
                                                data-start="@slotStart.ToString("yyyy-MM-dd HH:mm")"
                                                data-end="@slotEnd.ToString("yyyy-MM-dd HH:mm")"
                                                @(isPast ? "" : "role='button'")>
                                                @if (!isPast)
                                                {
                                                    <i class="bi bi-plus-circle text-success">Zarezerwuj</i>
                                                }
                                            </td>
                                        }
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (!Model.Rooms.Any())
    {
        <div class="alert alert-warning mt-3">
            <i class="bi bi-exclamation-triangle"></i> Brak dostępnych sal.
            <a asp-controller="Room" asp-action="Manage">Dodaj salę</a>
        </div>
    }
</div>

<!-- Modal rezerwacji -->
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Nowa rezerwacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label fw-bold">Sala:</label>
                    <p id="modal-room-name" class="form-control-plaintext"></p>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">Data i godzina:</label>
                    <p id="modal-datetime" class="form-control-plaintext"></p>
                </div>
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> Rezerwacja zostanie przypisana do Twojego konta: <strong>@User.Identity?.Name</strong>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                <button type="button" class="btn btn-primary" id="confirmBookingBtn">
                    <i class="bi bi-check-circle"></i> Potwierdź rezerwację
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let selectedSlot = null;

            // Obsługa kliknięcia na wolny slot
            $('.booking-slot.available').on('click', function() {
                @if (User.Identity?.IsAuthenticated == true)
                {
                        <text>
                        selectedSlot = $(this);
                        const roomName = selectedSlot.data('room-name');
                        const startTime = selectedSlot.data('start');
                        const endTime = selectedSlot.data('end');

                        $('#modal-room-name').text(roomName);
                        $('#modal-datetime').text(new Date(startTime).toLocaleString('pl-PL') + ' - ' + new Date(endTime).toLocaleTimeString('pl-PL'));

                        $('#bookingModal').modal('show');
                        </text>
                }
                else
                {
                        <text>
                        alert('Musisz być zalogowany, aby dokonać rezerwacji.');
                        window.location.href = '@Url.Action("Login", "Account")';
                        </text>
                }
            });

            // Potwierdzenie rezerwacji
            $('#confirmBookingBtn').on('click', function() {
                if (!selectedSlot) return;

                // ✅ POPRAWIONE - NIE konwertuj na UTC!
                const startTimeStr = selectedSlot.data('start'); // "2025-01-26 12:00"
                const endTimeStr = selectedSlot.data('end');     // "2025-01-26 13:00"

                const bookingData = {
                    roomId: parseInt(selectedSlot.data('room-id')),
                    // ✅ Wysyłaj string w formacie ISO bez UTC (bez 'Z' na końcu)
                    startTime: startTimeStr.replace(' ', 'T') + ':00', // "2025-01-26T12:00:00"
                    endTime: endTimeStr.replace(' ', 'T') + ':00'      // "2025-01-26T13:00:00"
                };

                console.log('Sending booking data:', bookingData); // ✅ Debug

                $.ajax({
                    url: '@Url.Action("CreateBooking", "Booking")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(bookingData),
                    success: function(response) {
                        console.log('Booking created:', response);
                        $('#bookingModal').modal('hide');
                        location.reload();
                    },
                    error: function(xhr) {
                        console.error('Error creating booking:', xhr);
                        const errorMsg = xhr.responseJSON?.error || 'Nie udało się utworzyć rezerwacji';
                        alert('Błąd: ' + errorMsg);
                    }
                });
            });

            // Usuwanie rezerwacji
            $('.delete-booking-btn').on('click', function(e) {
                e.stopPropagation();

                if (!confirm('Czy na pewno chcesz usunąć tę rezerwację?')) {
                    return;
                }

                const bookingId = $(this).data('booking-id');

                $.ajax({
                    url: '@Url.Action("DeleteBooking", "Booking")/' + bookingId,
                    type: 'DELETE',
                    success: function(response) {
                        console.log('Booking deleted:', response);
                        location.reload();
                    },
                    error: function(xhr) {
                        console.error('Error deleting booking:', xhr);
                        alert('Błąd: ' + (xhr.responseJSON?.error || 'Nie udało się usunąć rezerwacji'));
                    }
                });
            });

            // Tooltip dla zarezerwowanych slotów
            $('.booking-slot.booked').on('click', function() {
                const userName = $(this).data('user-name');
                const roomName = $(this).data('room-name');
                const start = new Date($(this).data('start')).toLocaleString('pl-PL');
                const end = new Date($(this).data('end')).toLocaleTimeString('pl-PL');

                alert(`Sala: ${roomName}\nZarezerwowana przez: ${userName}\nCzas: ${start} - ${end}`);
            });
        });
    </script>
}